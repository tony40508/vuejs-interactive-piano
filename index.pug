#app
  .audioplayer(v-for = "s in sounddata")
    audio(v-bind:data-num = 's.number')
      source(v-bind:src = "s.url")
      
  .centerBox
    h2 Vue.js Piano Project
    .keyboard
      .pianokey(v-for="s in displayKeys")
        .white(v-if="s.type == \'white\'" 
               v-on:click="addnote(s.num)"
               v-bind:class="playingTime && getCurrentHighlight(s.num, s.key) ? \"playing\" : \"\"") 
          .label {{ String.fromCharCode(s.key) }}
        .black(v-if="s.type == \'black\'" 
               v-on:click="addnote(s.num)"
               v-bind:class="playingTime && getCurrentHighlight(s.num, s.key) ? \"playing\" : \"\"") 
          .label {{ String.fromCharCode(s.key) }}
    br  
    .controls
      ul.notesList(v-if="notes.length > 0")
        li(v-for="(note, id) in notes" v-bind:class="nowNoteId - 1 == id ? \"playing\" : \"\"")
          .num(v-on:mouseover="playnote(note.num, 1)") {{ note.num }}
          .time {{ note.time }}
      button(v-on:click="loadSample") Sample    
      button(v-on:click="playnext(1)") Playnext
      button(v-if="playingTime <= 1" v-on:click="startplay") Start
        i.fa.fa-play
      button(v-if="playingTime > 1" v-on:click="stopplay") Stop
        i.fa.fa-pause
      button(v-if="recordTime <= 0" v-on:click="startRecord") Record
        i.fa.fa-circle
      button(v-if="recordTime >= 1" v-on:click="stopRecord") StopRecord
        i.fa.fa-stop
      button(v-on:click="notes = []") Clear
      
      h4 {{ playingTime + recordTime }}